set nocompatible
filetype plugin indent on
syntax on

source ~/bin/VimFiles/.vimrc_bundles
colorscheme desert


"Default {{{
let mapleader = ","
let g:mapleader = "," 
set expandtab                   "Expands tabs
set number                      "Line numbers
set backspace=indent,eol,start  "backspace will account for these 3 situations.
set tabstop=2                   "Tabs are 2 spaces
set softtabstop=2               "Number of spaces a tab counts for
set shiftwidth=2                "AudoIndent spaces
set smarttab                    "Uses shiftwidth. BS will delete the full tab.
set showmatch                   "Shows matching braces
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :vsplit $MYVIMRC<cr>
"}}}

"KeyMappings {{{
inoremap <c-d> <esc>yypi
imap jj <esc>
"}}}

"Tab/Window Management{{{
nnoremap _ <C-W>-
nnoremap + <C-W>+
nnoremap - <C-W><
nnoremap = <C-W>>
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-l> <C-W>l
nnoremap <C-h> <C-W>h
nnoremap <silent><c-p> :tabp <CR>
nnoremap <silent><c-n> :tabn <CR>

"}}}


"Searching {{{
set hlsearch
set incsearch
set ignorecase
set smartcase
"}}}

"Python {{{
autocmd FileType python nnoremap <buffer> <leader>c I#
autocmd FileType python nnoremap <buffer> <leader>d I'''
autocmd BufRead,BufNewFile *.py setlocal tabstop=4
autocmd BufRead,BufNewFile *.py setlocal softtabstop=4
autocmd BufRead,BufNewFile *.py setlocal shiftwidth=4
autocmd BufRead,BufNewFile *.py setlocal textwidth=80
autocmd BufRead,BufNewFile *.py setlocal smarttab
autocmd BufRead,BufNewFile *.py setlocal expandtab
"}}}

"Vimrc {{{
autocmd BufRead,BufNewFile *vimrc* iabbrev nno nnoremap
autocmd BufRead,BufNewFile *vimrc* iabbrev ino inoremap
"}}}
